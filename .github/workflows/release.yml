name: Create Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g., 0.2.1)'
        required: true
        type: string

permissions:
  contents: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.event.inputs.version }}
          release_name: Release v${{ github.event.inputs.version }}
          draft: false
          prerelease: false

  build-and-release:
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            arch: amd64
            artifact_name: StellaC
            binary_path: build/StellaC
            cmake_flags: ""

          - os: windows-latest
            platform: windows
            arch: amd64
            artifact_name: StellaC.exe
            binary_path: build/Release/StellaC.exe
            cmake_flags: ""

          - os: macos-latest
            platform: macos
            arch: amd64
            artifact_name: StellaC
            binary_path: build/StellaC
            cmake_flags: "-DCMAKE_OSX_ARCHITECTURES=x86_64"

          - os: macos-latest
            platform: macos
            arch: arm64
            artifact_name: StellaC
            binary_path: build/StellaC
            cmake_flags: "-DCMAKE_OSX_ARCHITECTURES=arm64"

    steps:
      - uses: actions/checkout@v4

      - name: Set up CMake
        uses: lukka/get-cmake@latest

      - name: Build
        run: |
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release ${{ matrix.cmake_flags }} ..
          cmake --build . --config Release

      - name: Rename Executable
        run: |
          if [ "${{ matrix.platform }}" = "windows" ]; then
            mv ${{ matrix.binary_path }} StellaC-${{ github.event.inputs.version }}-${{ matrix.arch }}.exe
          else
            mv ${{ matrix.binary_path }} StellaC-${{ github.event.inputs.version }}-${{ matrix.arch }}
          fi

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: |
            StellaC-${{ github.event.inputs.version }}-${{ matrix.arch }}*
          asset_name: StellaC-${{ github.event.inputs.version }}-${{ matrix.arch }}
          content_type: application/octet-stream
