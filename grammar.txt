program → declaration* EOF ;

declaration → classDecl
            | funDecl
            | varDecl
            | statement ;

classDecl → "class" IDENTIFIER ( "<" IDENTIFIER )?
            "{" function* "}" ;'

funDecl → "fn" function ;

varDecl → "let" | "set" IDENTIFIER ( "=" expression )? ";" ;

statement → exprStmt
            | forStmt
            | ifStmt
            | printStmt
            | returnStmt
            | whileStmt
            | block ;

exprStmt → expression ";" ;

forStmt → "for"  ( varDecl | exprStmt | ";" )
                    expression? ";"
                    expression?  statement ;

ifStmt → "if"  expression  statement
                    ( "else" statement )? ;

returnStmt → "return" expression? ";" ;

whileStmt → "while"  expression  statement ;

block → "{" declaration* "}" ;