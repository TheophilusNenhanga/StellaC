---
import CodeBlock from "../../components/CodeBlock.astro";
import DocumentationLayout from "../../layouts/DocumentationLayout.astro";

const printCode = `print("Hello");
print(" ");
print("World");
// Output: Hello World`;
const printlnCode = `println("Hello");
println("World");
// Output:
// Hello
// World`;
const lenCode = `let arr = [1, 2, 3, 4, 5];
println(len(arr));  // 5

let str = "Hello";
println(len(str));  // 5`;

const arrayAddCode = `let numbers = [1, 2, 3];
array_add(numbers, 4);
println(numbers);  // [1, 2, 3, 4]`;

const arrayRemCode = `let numbers = [1, 2, 3, 4];
let removed = array_rem(numbers);
println(removed);   // 4
println(numbers);   // [1, 2, 3]`;

const timeCode = `let start = time_ms();
// Do something...
let end = time_ms();
println("Execution time: " + (end - start) + " ms");`;

const combinedExample = `// Example: Measure function execution time
fn performTask() {
  let sum = 0;
  for let i = 0; i < 1000000; i = i + 1 {
    sum = sum + i;
  }
  return sum;
}

let start = time_ms();
let result = performTask();
let end = time_ms();

println("Result: " + result);
println("Execution time: " + (end - start) + " ms");`;
---

<DocumentationLayout title="Built-in Functions">
  <section>
    <p class="text-xl mb-6">
      Stella provides a set of built-in functions that you can use without having to define them yourself. These functions help with common tasks like input/output, data manipulation, and timing.
    </p>
    
    <h2 class="text-2xl font-bold mt-8 mb-4">Input/Output Functions</h2>
    
    <div class="bg-neutral-100 dark:bg-slate-800 p-6 rounded-lg border border-neutral-300 dark:border-slate-700 mb-6">
      <h3 class="text-xl font-bold mb-2">print(value)</h3>
      <p class="mb-2">Prints a value to the console without a newline.</p>
      <CodeBlock code={printCode} id="print-code" />
    </div>
    
    <div class="bg-neutral-100 dark:bg-slate-800 p-6 rounded-lg border border-neutral-300 dark:border-slate-700 mb-6">
      <h3 class="text-xl font-bold mb-2">println(value)</h3>
      <p class="mb-2">Prints a value to the console with a newline at the end.</p>
      <CodeBlock code={printlnCode} id="println-code" />
    </div>
    
    <h2 class="text-2xl font-bold mt-8 mb-4">Collection Functions</h2>
    
    <div class="bg-neutral-100 dark:bg-slate-800 p-6 rounded-lg border border-neutral-300 dark:border-slate-700 mb-6">
      <h3 class="text-xl font-bold mb-2">len(collection)</h3>
      <p class="mb-2">Returns the length of a collection (array or string).</p>
      <CodeBlock code={lenCode} id="len-code" />
    </div>
    
    <div class="bg-neutral-100 dark:bg-slate-800 p-6 rounded-lg border border-neutral-300 dark:border-slate-700 mb-6">
      <h3 class="text-xl font-bold mb-2">array_add(array, value)</h3>
      <p class="mb-2">Adds a value to the end of an array.</p>
      <CodeBlock code={arrayAddCode} id="array-add-code" />
    </div>
    
    <div class="bg-neutral-100 dark:bg-slate-800 p-6 rounded-lg border border-neutral-300 dark:border-slate-700 mb-6">
      <h3 class="text-xl font-bold mb-2">array_rem(array)</h3>
      <p class="mb-2">Removes and returns the last value from an array.</p>
      <CodeBlock code={arrayRemCode} id="array-rem-code" />
    </div>
    
    <h2 class="text-2xl font-bold mt-8 mb-4">Time Functions</h2>
    
    <div class="bg-neutral-100 dark:bg-slate-800 p-6 rounded-lg border border-neutral-300 dark:border-slate-700 mb-6">
      <h3 class="text-xl font-bold mb-2">time_s()</h3>
      <p class="mb-2">Returns the current time in seconds since the epoch.</p>
    </div>
    
    <div class="bg-neutral-100 dark:bg-slate-800 p-6 rounded-lg border border-neutral-300 dark:border-slate-700 mb-6">
      <h3 class="text-xl font-bold mb-2">time_ms()</h3>
      <p class="mb-2">Returns the current time in milliseconds since the epoch.</p>
      <CodeBlock code={timeCode} id="time-code" />
    </div>
    
    <h2 class="text-2xl font-bold mt-8 mb-4">Example: Combined Usage</h2>
    <p class="mb-4">
      Here's an example that combines several built-in functions:
    </p>
    <CodeBlock code={combinedExample} id="combined-example" />
  </section>
</DocumentationLayout> 