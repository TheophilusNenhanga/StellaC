---
import DocumentationLayout from "../../layouts/DocumentationLayout.astro";
import CodeBlock from "../../components/CodeBlock.astro";

const variableDeclarationCode = `// Variable declaration
let name = "Stella";
let age = 25;
let isActive = true;
let nothing = nil;`;

const numbersCode = `// Numbers
let integer = 42;
let float = 3.14;`;

const stringsCode = `// Strings
let message = "Hello, World!";
let name = "Stella";`;

const booleansCode = `// Booleans
let isValid = true;
let hasError = false;`;

const nilCode = `// Nil
let value = nil;`;

const arithmeticCode = `// Arithmetic
let sum = 5 + 3;       // Addition
let difference = 10 - 4; // Subtraction
let product = 6 * 7;   // Multiplication
let quotient = 15 / 3; // Division
let modulus = 7 % 3;   // Modulus (remainder)`;

const bitwiseCode = `// Bitwise operations
let leftShift = 1 << 2;  // Left shift (1 shifted left by 2 bits = 4)
let rightShift = 8 >> 1; // Right shift (8 shifted right by 1 bit = 4)`;
---

<DocumentationLayout title="Variables & Data Types">
  <section>
    <p class="text-xl mb-6">
      Stella is a dynamically typed language, meaning variable types are determined at runtime.
    </p>
    
    <h2 class="text-2xl font-bold mt-8 mb-4">Variable Declaration</h2>
    <p class="mb-4">
      Variables in Stella are declared using the <code>let</code> keyword.
    </p>
    <CodeBlock code={variableDeclarationCode} id="variable-declaration" />
    
    <h2 class="text-2xl font-bold mt-8 mb-4">Data Types</h2>
    <p class="mb-4">
      Stella supports several core data types:
    </p>
    
    <h3 class="text-xl font-bold mt-6 mb-2">Numbers</h3>
    <p class="mb-4">
      Numbers in Stella can be integers or floating-point values.
    </p>
    <CodeBlock code={numbersCode} id="numbers-code" />
    
    <h3 class="text-xl font-bold mt-6 mb-2">Strings</h3>
    <p class="mb-4">
      Strings are sequences of characters enclosed in double quotes.
    </p>
    <CodeBlock code={stringsCode} id="strings-code" />
    
    <h3 class="text-xl font-bold mt-6 mb-2">Booleans</h3>
    <p class="mb-4">
      Booleans represent true or false values.
    </p>
    <CodeBlock code={booleansCode} id="booleans-code" />
    
    <h3 class="text-xl font-bold mt-6 mb-2">Nil</h3>
    <p class="mb-4">
      Nil represents the absence of a value.
    </p>
    <CodeBlock code={nilCode} id="nil-code" />
    
    <h2 class="text-2xl font-bold mt-8 mb-4">Arithmetic Operations</h2>
    <p class="mb-4">
      Stella supports standard arithmetic operations:
    </p>
    <CodeBlock code={arithmeticCode} id="arithmetic-code" />
    
    <h2 class="text-2xl font-bold mt-8 mb-4">Bitwise Operations</h2>
    <p class="mb-4">
      Stella also supports bitwise operations:
    </p>
    <CodeBlock code={bitwiseCode} id="bitwise-code" />
    
    <div class="bg-blue-100 dark:bg-blue-900 p-4 rounded-md my-8">
      <p class="font-semibold">Next Steps</p>
      <p class="mt-2">
        Now that you understand variables and data types, learn about 
        <a href="/docs/control-flow" class="text-blue-600 dark:text-blue-400 underline">Control Flow</a> 
        to add logic to your programs.
      </p>
    </div>
  </section>
</DocumentationLayout> 